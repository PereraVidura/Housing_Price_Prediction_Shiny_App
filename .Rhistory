library(shiny); runApp('housing_price_prediction_app.R')
# Load necessary libraries
library(tidyverse)
library(caret)
library(randomForest)  # You can replace this with your preferred regression algorithm
# Load the California Housing dataset
# Download the dataset from: https://www.dcc.fc.up.pt/~ltorgo/Regression/cal_housing.html
california_housing <- read.csv("cal_housing.csv")
# Data Exploration
# (You can add more exploration steps based on your needs)
# Data Preprocessing
# Handle missing values
california_housing <- na.omit(california_housing)
# Choose features and target variable
target <- "median_house_value"
features <- setdiff(names(california_housing), target)
# Split the dataset into training and testing sets
set.seed(123)
train_index <- createDataPartition(california_housing[[target]], p = 0.8, list = FALSE)
train_data <- california_housing[train_index, ]
test_data <- california_housing[-train_index, ]
# Train the model (using random forest as an example)
model <- randomForest(formula = as.formula(paste(target, "~ .")), data = train_data)
# Save the model
saveRDS(model, "housing_price_model.rds")
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
install.packages("shiny.semantic")
runApp('housing_price_prediction_app.R')
install.packages(c("shiny.semantic", "semantic.dashboard", "semantic.dashboard.semanticui"))
install.packages(c("shiny.semantic", "semantic.dashboard", "semantic.dashboard.semanticui"))
install.packages(c("shiny.semantic", "semantic.dashboard", "semantic.dashboard.semanticui"))
library(shiny); runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
# Load necessary libraries
library(tidyverse)
library(caret)
library(randomForest)  # You can replace this with your preferred regression algorithm
# Load the California Housing dataset
# Download the dataset from: https://www.dcc.fc.up.pt/~ltorgo/Regression/cal_housing.html
california_housing <- read.csv("cal_housing.csv")
# Data Exploration
# (You can add more exploration steps based on your needs)
# Data Preprocessing
# Handle missing values
california_housing <- na.omit(california_housing)
# Choose features and target variable
target <- "median_house_value"
features <- setdiff(names(california_housing), target)
# Split the dataset into training and testing sets
set.seed(123)
train_index <- createDataPartition(california_housing[[target]], p = 0.8, list = FALSE)
train_data <- california_housing[train_index, ]
test_data <- california_housing[-train_index, ]
# Train the model (using random forest as an example)
model <- randomForest(formula = as.formula(paste(target, "~ .")), data = train_data)
# Save the model
saveRDS(model, "housing_price_model.rds")
library(shiny); runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
runApp('housing_price_prediction_app.R')
library(shiny); runApp('housing_price_prediction_app.R')
# Load necessary libraries
library(tidyverse)
library(caret)
library(randomForest)  # You can replace this with your preferred regression algorithm
# Load the California Housing dataset
# Download the dataset from: https://www.dcc.fc.up.pt/~ltorgo/Regression/cal_housing.html
california_housing <- read.csv("cal_housing.csv")
# Data Preprocessing
# Handle missing values
california_housing <- na.omit(california_housing)
# Choose features and target variable
target <- "median_house_value"
features <- setdiff(names(california_housing), target)
# Split the dataset into training and testing sets
set.seed(123)
train_index <- createDataPartition(california_housing[[target]], p = 0.8, list = FALSE)
train_data <- california_housing[train_index, ]
test_data <- california_housing[-train_index, ]
# Train the model (using random forest as an example)
model <- randomForest(formula = as.formula(paste(target, "~ .")), data = train_data)
# Save the model
saveRDS(model, "housing_price_model.rds")
